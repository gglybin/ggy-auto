---
# tasks file for db_software_setup

- name: Create "{{ os_db_owner }}" OS user environment file
  become: yes
  become_user: "{{ os_db_owner }}"
  template:
    src: "env.j2"
    dest: "/home/{{ os_db_owner }}/{{ ora_db_sid }}.env"

- name: Unarchive Oracle Home
  become: yes
  become_user: "{{ os_db_owner }}"
  unarchive:
    src: "{{ oracle_home_zip }}"
    dest: "{{ oracle_home }}/"

- name: Create sqlnet.ora / listener.ora / tnsnames.ora files
  template:
    src: "{{ item.source }}"
    dest: "{{ item.target }}"
    mode: '0775'
  with_items:
    - { source: "sqlnet.j2",   target: "{{ oracle_home }}/network/admin/sqlnet.ora" }
    - { source: "listener.j2", target: "{{ oracle_home }}/network/admin/listener.ora" }
    - { source: "tnsnames.j2", target: "{{ oracle_home }}/network/admin/tnsnames.ora" }

- name: Apply Workaround for runInstaller [WARNING] [INS-08101] on Linux 8 Platforms
  become: yes
  become_user: "{{ os_db_owner }}"
  lineinfile:
    path: "{{ oracle_home }}/cv/admin/cvu_config"
    line: "{{ item }}"
    state: present
    backup: yes
  with_items:
    - "# Manual fix to avoid runInstaller [WARNING] [INS-08101] on Linux 8 Platforms"
    - "CV_ASSUME_DISTID=OEL8"
  when: ansible_facts['distribution_major_version'] | int == 8

- name: Start runInstaller in SWO mode
  become: yes
  become_user: "{{ os_db_owner }}"
  shell:
    cmd: "{{ oracle_home }}/perl/bin/perl {{ oracle_home }}/clone/bin/clone.pl \
          ORACLE_BASE={{ oracle_base }} \
          ORACLE_HOME={{ oracle_home }} \
          INVENTORY_LOCATION={{ oracle_inventory }} \
          OSDBA_GROUP=dba \
          OSOPER_GROUP=dba \
          ORACLE_HOME_NAME=\"OH12102\""
  ignore_errors: True

- name: Execute oracle post-install scripts as root user
  shell:
    cmd: "{{ item }}"
  with_items:
    - "{{ oracle_home }}/root.sh -silent"
  ignore_errors: True
